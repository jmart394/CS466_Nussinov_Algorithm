{"ast":null,"code":"var _jsxFileName = \"/Users/Jainfamily/Desktop/cs466/v2/CS466_Nussinov_Algorithm/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { FornaContainer } from \"fornac\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NussinovApp() {\n  _s();\n  const [sequence, setSequence] = useState(\"\");\n  const [dpTable, setDpTable] = useState([]);\n  const [visitedCells, setVisitedCells] = useState([]);\n  const [structure, setStructure] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const validCharacters = /^[AUCG]*$/i;\n    if (sequence.length > 30) {\n      setError(\"Please enter a valid RNA sequence (â‰¤ 30 characters).\");\n      return;\n    }\n    if (!validCharacters.test(sequence)) {\n      setError(\"Invalid sequence! Please use only A, U, C, and G.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:4000/nussinov\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sequence\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setDpTable(modifyDpTable(data.dp_table));\n        setVisitedCells(data.visited_cells);\n        setStructure(data.structure);\n        setError(\"\");\n      } else {\n        setError(data.error);\n      }\n    } catch (e) {\n      setError(\"An unexpected error occurred while processing your request.\");\n    }\n  };\n  useEffect(() => {\n    if (structure && sequence) {\n      try {\n        const fornaContainer = new FornaContainer(\"#fornaContainer\", {\n          animation: false,\n          zoomable: true,\n          initialSize: [600, 300]\n        });\n        const options = {\n          structure: structure,\n          sequence: sequence\n        };\n        fornaContainer.addRNA(options.structure, options);\n      } catch (error) {\n        console.error(\"Error initializing FornaContainer:\", error);\n      }\n    }\n  }, [structure, sequence]);\n  const modifyDpTable = dpTable => {\n    const rows = dpTable.length;\n    const cols = dpTable[0].length;\n    return dpTable.map((row, i) => row.map((cell, j) => ({\n      value: cell,\n      style: {\n        opacity: i >= rows / 2 && j >= cols / 2 ? 0.5 : 1,\n        backgroundColor: i >= rows / 2 && j >= cols / 2 ? 'lightgray' : 'white'\n      }\n    })));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.errorBar,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Nussinov Algorithm Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sequence,\n        onChange: e => setSequence(e.target.value),\n        placeholder: \"Enter RNA Sequence (\\u2264 30 chars)\",\n        required: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        children: \"Run Algorithm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.output,\n      children: [dpTable.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"DP Table for RNA Sequence: \", sequence]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          style: styles.table,\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: dpTable.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  ...styles.cell,\n                  ...(visitedCells.some(([x, y]) => x === i && y === j) ? styles.highlight : {})\n                },\n                children: cell\n              }, `${i}-${j}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 23\n              }, this))\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), structure && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Predicted Secondary Structure:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          style: styles.structureTable,\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: sequence.split('').map((char, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: styles.structureCell,\n                children: char\n              }, `seq-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: structure.split('').map((char, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: styles.structureCell,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: 'bold',\n                    fontSize: '18px'\n                  },\n                  children: char\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, this)\n              }, `struct-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Visualization:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"fornaContainer\",\n          style: styles.fornaContainer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(NussinovApp, \"Qg3mQoXRwyB++Uk38418Ehv2QkY=\");\n_c = NussinovApp;\nconst styles = {\n  container: {\n    fontFamily: \"Arial, sans-serif\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minHeight: \"100vh\",\n    paddingTop: \"10px\",\n    padding: \"20px\"\n  },\n  form: {\n    textAlign: \"center\",\n    marginBottom: \"20px\"\n  },\n  input: {\n    width: \"300px\",\n    height: \"40px\",\n    fontSize: \"16px\",\n    padding: \"5px\",\n    margin: \"10px 0\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"5px\"\n  },\n  button: {\n    fontSize: \"16px\",\n    padding: \"16px 20px\",\n    margin: \"10px\",\n    backgroundColor: \"#007bff\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\"\n  },\n  buttonHover: {\n    backgroundColor: \"#0056b3\"\n  },\n  output: {\n    marginTop: \"20px\",\n    // maxHeight: \"60vh\",\n    overflowY: \"auto\",\n    textAlign: \"center\"\n  },\n  table: {\n    borderCollapse: \"collapse\",\n    margin: \"20px auto\",\n    maxWidth: \"100%\"\n  },\n  cell: {\n    border: \"1px solid black\",\n    padding: \"10px\",\n    textAlign: \"center\",\n    width: \"40px\",\n    height: \"40px\",\n    fontSize: \"12px\"\n  },\n  highlight: {\n    backgroundColor: \"yellow\"\n  },\n  errorBar: {\n    backgroundColor: \"#ffcccc\",\n    color: \"#cc0000\",\n    padding: \"10px\",\n    margin: \"20px auto\",\n    width: \"50%\",\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n    position: \"fixed\",\n    top: 0,\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    zIndex: 1000,\n    borderRadius: '10px'\n  },\n  structureTable: {\n    borderCollapse: \"collapse\",\n    margin: \"20px auto\",\n    maxWidth: \"100%\"\n  },\n  structureCell: {\n    border: \"1px solid black\",\n    padding: \"10px\",\n    textAlign: \"center\",\n    width: \"30px\",\n    height: \"30px\",\n    fontSize: \"14px\"\n  },\n  fornaContainer: {\n    width: \"80%\",\n    height: \"400px\",\n    border: \"1px solid black\",\n    marginTop: \"20px\",\n    margin: \"20px auto\"\n  }\n};\nexport default NussinovApp;\nvar _c;\n$RefreshReg$(_c, \"NussinovApp\");","map":{"version":3,"names":["React","useState","useEffect","FornaContainer","jsxDEV","_jsxDEV","NussinovApp","_s","sequence","setSequence","dpTable","setDpTable","visitedCells","setVisitedCells","structure","setStructure","error","setError","handleSubmit","event","preventDefault","validCharacters","length","test","response","fetch","method","headers","body","JSON","stringify","data","json","ok","modifyDpTable","dp_table","visited_cells","e","fornaContainer","animation","zoomable","initialSize","options","addRNA","console","rows","cols","map","row","i","cell","j","value","style","opacity","backgroundColor","styles","container","children","errorBar","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","form","type","onChange","target","placeholder","required","input","button","output","table","some","x","y","highlight","structureTable","split","char","index","structureCell","fontWeight","fontSize","id","_c","fontFamily","display","flexDirection","alignItems","justifyContent","minHeight","paddingTop","padding","textAlign","marginBottom","width","height","margin","border","borderRadius","color","cursor","buttonHover","marginTop","overflowY","borderCollapse","maxWidth","position","top","left","transform","zIndex","$RefreshReg$"],"sources":["/Users/Jainfamily/Desktop/cs466/v2/CS466_Nussinov_Algorithm/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FornaContainer } from \"fornac\";\n\nfunction NussinovApp() {\n  const [sequence, setSequence] = useState(\"\");\n  const [dpTable, setDpTable] = useState([]);\n  const [visitedCells, setVisitedCells] = useState([]);\n  const [structure, setStructure] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const validCharacters = /^[AUCG]*$/i;\n\n    if (sequence.length > 30) {\n      setError(\"Please enter a valid RNA sequence (â‰¤ 30 characters).\");\n      return;\n    }\n    if (!validCharacters.test(sequence)) {\n      setError(\"Invalid sequence! Please use only A, U, C, and G.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:4000/nussinov\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ sequence }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setDpTable(modifyDpTable(data.dp_table));\n        setVisitedCells(data.visited_cells);\n        setStructure(data.structure);\n        setError(\"\");\n      } else {\n        setError(data.error);\n      }\n    } catch (e) {\n      setError(\"An unexpected error occurred while processing your request.\");\n    }\n  };\n\n  useEffect(() => {\n    if (structure && sequence) {\n      try {\n        const fornaContainer = new FornaContainer(\"#fornaContainer\", {\n          animation: false,\n          zoomable: true,\n          initialSize: [600, 300],\n        });\n\n        const options = {\n          structure: structure,\n          sequence: sequence,\n        };\n\n        fornaContainer.addRNA(options.structure, options);\n      } catch (error) {\n        console.error(\"Error initializing FornaContainer:\", error);\n      }\n    }\n  }, [structure, sequence]);\n\n  const modifyDpTable = (dpTable) => {\n    const rows = dpTable.length;\n    const cols = dpTable[0].length;\n    return dpTable.map((row, i) =>\n      row.map((cell, j) => ({\n        value: cell,\n        style: {\n          opacity: i >= rows / 2 && j >= cols / 2 ? 0.5 : 1,\n          backgroundColor: i >= rows / 2 && j >= cols / 2 ? 'lightgray' : 'white',\n        },\n      }))\n    );\n  };\n\n  return (\n    <div style={styles.container}>\n      {error && <div style={styles.errorBar}>{error}</div>}\n      <h1>Nussinov Algorithm Visualization</h1>\n      <form onSubmit={handleSubmit} style={styles.form}>\n        <input\n          type=\"text\"\n          value={sequence}\n          onChange={(e) => setSequence(e.target.value)}\n          placeholder=\"Enter RNA Sequence (â‰¤ 30 chars)\"\n          required\n          style={styles.input}\n        />\n        <button type=\"submit\" style={styles.button}>\n          Run Algorithm\n        </button>\n      </form>\n      <div style={styles.output}>\n        {dpTable.length > 0 && (\n          <div>\n            <h3>DP Table for RNA Sequence: {sequence}</h3>\n            <table style={styles.table}>\n              <tbody>\n                {dpTable.map((row, i) => (\n                  <tr key={i}>\n                    {row.map((cell, j) => (\n                      <td\n                        key={`${i}-${j}`}\n                        style={{\n                          ...styles.cell,\n                          ...(visitedCells.some(\n                            ([x, y]) => x === i && y === j\n                          )\n                            ? styles.highlight\n                            : {}),\n                        }}\n                      >\n                        {cell}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n        {structure && (\n          <div>\n            <h3>Predicted Secondary Structure:</h3>\n            {/* <p>{structure}</p> */}\n            <table style={styles.structureTable}>\n            <tbody>\n                <tr>\n                {sequence.split('').map((char, index) => (\n                    <td key={`seq-${index}`} style={styles.structureCell}>{char}</td>\n                ))}\n                </tr>\n                <tr>\n                {structure.split('').map((char, index) => (\n                    <td key={`struct-${index}`} style={styles.structureCell}>\n                    <span style={{ fontWeight: 'bold', fontSize: '18px' }}>{char}</span>\n\n                    </td>\n                ))}\n                </tr>\n            </tbody>\n            </table>\n            <h3>Visualization:</h3>\n            <div id=\"fornaContainer\" style={styles.fornaContainer}></div> {/* Forna Container */}\n          </div>\n        )}\n        \n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    fontFamily: \"Arial, sans-serif\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minHeight: \"100vh\",\n    paddingTop: \"10px\",\n    padding: \"20px\",\n  },\n  form: {\n    textAlign: \"center\",\n    marginBottom: \"20px\",\n  },\n  input: {\n    width: \"300px\",\n    height: \"40px\",\n    fontSize: \"16px\",\n    padding: \"5px\",\n    margin: \"10px 0\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"5px\",\n  },\n  button: {\n    fontSize: \"16px\",\n    padding: \"16px 20px\",\n    margin: \"10px\",\n    backgroundColor: \"#007bff\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n  },\n  buttonHover: {\n    backgroundColor: \"#0056b3\",\n  },\n  output: {\n    marginTop: \"20px\",\n    // maxHeight: \"60vh\",\n    overflowY: \"auto\",\n    textAlign: \"center\",\n  },\n  table: {\n    borderCollapse: \"collapse\",\n    margin: \"20px auto\",\n    maxWidth: \"100%\",\n  },\n  cell: {\n    border: \"1px solid black\",\n    padding: \"10px\",\n    textAlign: \"center\",\n    width: \"40px\",\n    height: \"40px\",\n    fontSize: \"12px\",\n  },\n  highlight: {\n    backgroundColor: \"yellow\",\n  },\n  errorBar: {\n  backgroundColor: \"#ffcccc\",\n  color: \"#cc0000\",\n  padding: \"10px\",\n  margin: \"20px auto\",\n  width: \"50%\",\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n  position: \"fixed\",\n  top: 0,\n  left: \"50%\",\n  transform: \"translateX(-50%)\",\n  zIndex: 1000,\n  borderRadius: '10px',\n},\n\nstructureTable: {\n  borderCollapse: \"collapse\",\n  margin: \"20px auto\",\n  maxWidth: \"100%\",\n},\nstructureCell: {\n  border: \"1px solid black\",\n  padding: \"10px\",\n  textAlign: \"center\",\n  width: \"30px\",\n  height: \"30px\",\n  fontSize: \"14px\",\n},\nfornaContainer: {\n  width: \"80%\",\n  height: \"400px\",\n  border: \"1px solid black\",\n  marginTop: \"20px\",\n  margin: \"20px auto\",\n},\n};\n\nexport default NussinovApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}