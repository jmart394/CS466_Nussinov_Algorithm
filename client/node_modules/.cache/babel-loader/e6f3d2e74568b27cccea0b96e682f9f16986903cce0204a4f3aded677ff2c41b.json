{"ast":null,"code":"var _jsxFileName = \"/Users/Jainfamily/Desktop/cs466/v2/CS466_Nussinov_Algorithm/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { FornaContainer } from \"fornac\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NussinovApp() {\n  _s();\n  const [sequence, setSequence] = useState(\"\");\n  const [dpTable, setDpTable] = useState([]);\n  const [visitedCells, setVisitedCells] = useState([]);\n  const [structure, setStructure] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isDpTableVisible, setIsDpTableVisible] = useState(true);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const validCharacters = /^[AUCG]*$/i;\n    if (sequence.length > 30) {\n      setError(\"Please enter a valid RNA sequence (≤ 30 characters).\");\n      return;\n    }\n    if (!validCharacters.test(sequence)) {\n      setError(\"Invalid sequence! Please use only A, U, C, and G.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:4000/nussinov\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sequence\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setDpTable(modifyDpTable(data.dp_table));\n        setVisitedCells(data.visited_cells);\n        setStructure(data.structure);\n        setError(\"\");\n      } else {\n        setError(data.error);\n      }\n    } catch (e) {\n      setError(\"An unexpected error occurred while processing your request.\");\n    }\n  };\n  const FoldingBar = ({\n    isVisible,\n    toggleVisibility\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#f0f0f0',\n      padding: '10px',\n      cursor: 'pointer',\n      textAlign: 'center',\n      borderBottom: isVisible ? '1px solid #ccc' : 'none'\n    },\n    onClick: toggleVisibility,\n    children: isVisible ? 'Hide DP Table ▲' : 'Show DP Table ▼'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    if (structure && sequence) {\n      try {\n        const fornaContainer = new FornaContainer(\"#fornaContainer\", {\n          animation: false,\n          zoomable: true,\n          initialSize: [600, 300]\n        });\n        const options = {\n          structure: structure,\n          sequence: sequence\n        };\n        fornaContainer.addRNA(options.structure, options);\n      } catch (error) {\n        console.error(\"Error initializing FornaContainer:\", error);\n      }\n    }\n  }, [structure, sequence]);\n  const modifyDpTable = dpTable => {\n    const rows = dpTable.length;\n    const cols = dpTable[0].length;\n    return dpTable.map((row, i) => row.map((cell, j) => ({\n      value: cell,\n      style: {\n        opacity: i >= rows / 2 && j >= cols / 2 ? 0.5 : 1,\n        backgroundColor: i >= rows / 2 && j >= cols / 2 ? 'lightgray' : 'white'\n      }\n    })));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.errorBar,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Nussinov Algorithm Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sequence,\n        onChange: e => setSequence(e.target.value),\n        placeholder: \"Enter RNA Sequence (\\u2264 30 chars)\",\n        required: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        children: \"Run Algorithm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.output,\n      children: [dpTable.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FoldingBar, {\n          isVisible: isDpTableVisible,\n          toggleVisibility: () => setIsDpTableVisible(!isDpTableVisible)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            ...styles.dpTableContainer,\n            ...(isDpTableVisible ? {} : styles.dpTableHidden)\n          },\n          children: isDpTableVisible && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"DP Table for RNA Sequence: \", sequence]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              style: styles.table,\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: dpTable.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      ...styles.cell,\n                      ...cell.style,\n                      ...(visitedCells.some(([x, y]) => x === i && y === j) ? styles.highlight : {})\n                    },\n                    children: cell.value\n                  }, `${i}-${j}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 19\n                  }, this))\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 15\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 3\n      }, this), structure && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Predicted Secondary Structure:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          style: styles.structureTable,\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: sequence.split('').map((char, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: styles.structureCell,\n                children: char\n              }, `seq-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: structure.split('').map((char, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: styles.structureCell,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: 'bold',\n                    fontSize: '18px'\n                  },\n                  children: char\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this)\n              }, `struct-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Visualization:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"fornaContainer\",\n          style: styles.fornaContainer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(NussinovApp, \"gaUetSQEzlUSSjbGX+nUhv8Rsss=\");\n_c = NussinovApp;\nconst styles = {\n  container: {\n    fontFamily: \"Arial, sans-serif\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minHeight: \"100vh\",\n    paddingTop: \"10px\",\n    padding: \"20px\"\n  },\n  form: {\n    textAlign: \"center\",\n    marginBottom: \"20px\"\n  },\n  input: {\n    width: \"300px\",\n    height: \"40px\",\n    fontSize: \"16px\",\n    padding: \"5px\",\n    margin: \"10px 0\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"5px\"\n  },\n  button: {\n    fontSize: \"16px\",\n    padding: \"16px 20px\",\n    margin: \"10px\",\n    backgroundColor: \"#007bff\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\"\n  },\n  buttonHover: {\n    backgroundColor: \"#0056b3\"\n  },\n  output: {\n    marginTop: \"20px\",\n    // maxHeight: \"60vh\",\n    overflowY: \"auto\",\n    textAlign: \"center\"\n  },\n  table: {\n    borderCollapse: \"collapse\",\n    margin: \"20px auto\",\n    maxWidth: \"100%\"\n  },\n  cell: {\n    border: \"1px solid black\",\n    padding: \"10px\",\n    textAlign: \"center\",\n    width: \"40px\",\n    height: \"40px\",\n    fontSize: \"12px\"\n  },\n  highlight: {\n    backgroundColor: \"yellow\"\n  },\n  errorBar: {\n    backgroundColor: \"#ffcccc\",\n    color: \"#cc0000\",\n    padding: \"10px\",\n    margin: \"20px auto\",\n    width: \"50%\",\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n    position: \"fixed\",\n    top: 0,\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    zIndex: 1000,\n    borderRadius: '10px'\n  },\n  structureTable: {\n    borderCollapse: \"collapse\",\n    margin: \"20px auto\",\n    maxWidth: \"100%\"\n  },\n  structureCell: {\n    border: \"1px solid black\",\n    padding: \"10px\",\n    textAlign: \"center\",\n    width: \"30px\",\n    height: \"30px\",\n    fontSize: \"14px\"\n  },\n  fornaContainer: {\n    width: \"80%\",\n    height: \"400px\",\n    border: \"1px solid black\",\n    marginTop: \"20px\",\n    margin: \"20px auto\"\n  },\n  dpTableContainer: {\n    maxHeight: '1000px',\n    overflow: 'hidden',\n    transition: 'max-height 0.3s ease-out'\n  },\n  dpTableHidden: {\n    maxHeight: '0'\n  }\n};\nexport default NussinovApp;\nvar _c;\n$RefreshReg$(_c, \"NussinovApp\");","map":{"version":3,"names":["React","useState","useEffect","FornaContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","NussinovApp","_s","sequence","setSequence","dpTable","setDpTable","visitedCells","setVisitedCells","structure","setStructure","error","setError","isDpTableVisible","setIsDpTableVisible","handleSubmit","event","preventDefault","validCharacters","length","test","response","fetch","method","headers","body","JSON","stringify","data","json","ok","modifyDpTable","dp_table","visited_cells","e","FoldingBar","isVisible","toggleVisibility","style","backgroundColor","padding","cursor","textAlign","borderBottom","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","fornaContainer","animation","zoomable","initialSize","options","addRNA","console","rows","cols","map","row","i","cell","j","value","opacity","styles","container","errorBar","onSubmit","form","type","onChange","target","placeholder","required","input","button","output","dpTableContainer","dpTableHidden","table","some","x","y","highlight","structureTable","split","char","index","structureCell","fontWeight","fontSize","id","_c","fontFamily","display","flexDirection","alignItems","justifyContent","minHeight","paddingTop","marginBottom","width","height","margin","border","borderRadius","color","buttonHover","marginTop","overflowY","borderCollapse","maxWidth","position","top","left","transform","zIndex","maxHeight","overflow","transition","$RefreshReg$"],"sources":["/Users/Jainfamily/Desktop/cs466/v2/CS466_Nussinov_Algorithm/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FornaContainer } from \"fornac\";\n\nfunction NussinovApp() {\n  const [sequence, setSequence] = useState(\"\");\n  const [dpTable, setDpTable] = useState([]);\n  const [visitedCells, setVisitedCells] = useState([]);\n  const [structure, setStructure] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isDpTableVisible, setIsDpTableVisible] = useState(true);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const validCharacters = /^[AUCG]*$/i;\n\n    if (sequence.length > 30) {\n      setError(\"Please enter a valid RNA sequence (≤ 30 characters).\");\n      return;\n    }\n    if (!validCharacters.test(sequence)) {\n      setError(\"Invalid sequence! Please use only A, U, C, and G.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:4000/nussinov\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ sequence }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setDpTable(modifyDpTable(data.dp_table));\n        setVisitedCells(data.visited_cells);\n        setStructure(data.structure);\n        setError(\"\");\n      } else {\n        setError(data.error);\n      }\n    } catch (e) {\n      setError(\"An unexpected error occurred while processing your request.\");\n    }\n  };\n\n  const FoldingBar = ({ isVisible, toggleVisibility }) => (\n    <div\n      style={{\n        backgroundColor: '#f0f0f0',\n        padding: '10px',\n        cursor: 'pointer',\n        textAlign: 'center',\n        borderBottom: isVisible ? '1px solid #ccc' : 'none',\n      }}\n      onClick={toggleVisibility}\n    >\n      {isVisible ? 'Hide DP Table ▲' : 'Show DP Table ▼'}\n    </div>\n  );\n\n  useEffect(() => {\n    if (structure && sequence) {\n      try {\n        const fornaContainer = new FornaContainer(\"#fornaContainer\", {\n          animation: false,\n          zoomable: true,\n          initialSize: [600, 300],\n        });\n\n        const options = {\n          structure: structure,\n          sequence: sequence,\n        };\n\n        fornaContainer.addRNA(options.structure, options);\n      } catch (error) {\n        console.error(\"Error initializing FornaContainer:\", error);\n      }\n    }\n  }, [structure, sequence]);\n\n  const modifyDpTable = (dpTable) => {\n    const rows = dpTable.length;\n    const cols = dpTable[0].length;\n    return dpTable.map((row, i) =>\n      row.map((cell, j) => ({\n        value: cell,\n        style: {\n          opacity: i >= rows / 2 && j >= cols / 2 ? 0.5 : 1,\n          backgroundColor: i >= rows / 2 && j >= cols / 2 ? 'lightgray' : 'white',\n        },\n      }))\n    );\n  };\n\n  return (\n    <div style={styles.container}>\n      {error && <div style={styles.errorBar}>{error}</div>}\n      <h1>Nussinov Algorithm Visualization</h1>\n      <form onSubmit={handleSubmit} style={styles.form}>\n        <input\n          type=\"text\"\n          value={sequence}\n          onChange={(e) => setSequence(e.target.value)}\n          placeholder=\"Enter RNA Sequence (≤ 30 chars)\"\n          required\n          style={styles.input}\n        />\n        <button type=\"submit\" style={styles.button}>\n          Run Algorithm\n        </button>\n      </form>\n      <div style={styles.output}>\n        {dpTable.length > 0 && (\n  <div>\n    <FoldingBar\n      isVisible={isDpTableVisible}\n      toggleVisibility={() => setIsDpTableVisible(!isDpTableVisible)}\n    />\n    <div style={{\n  ...styles.dpTableContainer,\n  ...(isDpTableVisible ? {} : styles.dpTableHidden)\n}}>\n    {isDpTableVisible && (\n      <>\n        <h3>DP Table for RNA Sequence: {sequence}</h3>\n        <table style={styles.table}>\n          <tbody>\n            {dpTable.map((row, i) => (\n              <tr key={i}>\n                {row.map((cell, j) => (\n                  <td\n                    key={`${i}-${j}`}\n                    style={{\n                      ...styles.cell,\n                      ...cell.style,\n                      ...(visitedCells.some(([x, y]) => x === i && y === j)\n                        ? styles.highlight\n                        : {}),\n                    }}\n                  >\n                    {cell.value}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </>\n    )}\n    </div>\n  </div>\n)}\n        {structure && (\n          <div>\n            <h3>Predicted Secondary Structure:</h3>\n            <table style={styles.structureTable}>\n            <tbody>\n                <tr>\n                {sequence.split('').map((char, index) => (\n                    <td key={`seq-${index}`} style={styles.structureCell}>{char}</td>\n                ))}\n                </tr>\n                <tr>\n                {structure.split('').map((char, index) => (\n                    <td key={`struct-${index}`} style={styles.structureCell}>\n                    <span style={{ fontWeight: 'bold', fontSize: '18px' }}>{char}</span>\n\n                    </td>\n                ))}\n                </tr>\n            </tbody>\n            </table>\n            <h3>Visualization:</h3>\n            <div id=\"fornaContainer\" style={styles.fornaContainer}></div> {/* Forna Container */}\n          </div>\n        )}\n        \n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    fontFamily: \"Arial, sans-serif\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minHeight: \"100vh\",\n    paddingTop: \"10px\",\n    padding: \"20px\",\n  },\n  form: {\n    textAlign: \"center\",\n    marginBottom: \"20px\",\n  },\n  input: {\n    width: \"300px\",\n    height: \"40px\",\n    fontSize: \"16px\",\n    padding: \"5px\",\n    margin: \"10px 0\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"5px\",\n  },\n  button: {\n    fontSize: \"16px\",\n    padding: \"16px 20px\",\n    margin: \"10px\",\n    backgroundColor: \"#007bff\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n  },\n  buttonHover: {\n    backgroundColor: \"#0056b3\",\n  },\n  output: {\n    marginTop: \"20px\",\n    // maxHeight: \"60vh\",\n    overflowY: \"auto\",\n    textAlign: \"center\",\n  },\n  table: {\n    borderCollapse: \"collapse\",\n    margin: \"20px auto\",\n    maxWidth: \"100%\",\n  },\n  cell: {\n    border: \"1px solid black\",\n    padding: \"10px\",\n    textAlign: \"center\",\n    width: \"40px\",\n    height: \"40px\",\n    fontSize: \"12px\",\n  },\n  highlight: {\n    backgroundColor: \"yellow\",\n  },\n  errorBar: {\n  backgroundColor: \"#ffcccc\",\n  color: \"#cc0000\",\n  padding: \"10px\",\n  margin: \"20px auto\",\n  width: \"50%\",\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n  position: \"fixed\",\n  top: 0,\n  left: \"50%\",\n  transform: \"translateX(-50%)\",\n  zIndex: 1000,\n  borderRadius: '10px',\n},\n\nstructureTable: {\n  borderCollapse: \"collapse\",\n  margin: \"20px auto\",\n  maxWidth: \"100%\",\n},\nstructureCell: {\n  border: \"1px solid black\",\n  padding: \"10px\",\n  textAlign: \"center\",\n  width: \"30px\",\n  height: \"30px\",\n  fontSize: \"14px\",\n},\nfornaContainer: {\n  width: \"80%\",\n  height: \"400px\",\n  border: \"1px solid black\",\n  marginTop: \"20px\",\n  margin: \"20px auto\",\n},\ndpTableContainer: {\n  maxHeight: '1000px',\n  overflow: 'hidden',\n  transition: 'max-height 0.3s ease-out',\n},\ndpTableHidden: {\n  maxHeight: '0',\n},\n};\n\nexport default NussinovApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAMqB,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,eAAe,GAAG,YAAY;IAEpC,IAAIf,QAAQ,CAACgB,MAAM,GAAG,EAAE,EAAE;MACxBP,QAAQ,CAAC,sDAAsD,CAAC;MAChE;IACF;IACA,IAAI,CAACM,eAAe,CAACE,IAAI,CAACjB,QAAQ,CAAC,EAAE;MACnCS,QAAQ,CAAC,mDAAmD,CAAC;MAC7D;IACF;IAEA,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAExB;QAAS,CAAC;MACnC,CAAC,CAAC;MAEF,MAAMyB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACfxB,UAAU,CAACyB,aAAa,CAACH,IAAI,CAACI,QAAQ,CAAC,CAAC;QACxCxB,eAAe,CAACoB,IAAI,CAACK,aAAa,CAAC;QACnCvB,YAAY,CAACkB,IAAI,CAACnB,SAAS,CAAC;QAC5BG,QAAQ,CAAC,EAAE,CAAC;MACd,CAAC,MAAM;QACLA,QAAQ,CAACgB,IAAI,CAACjB,KAAK,CAAC;MACtB;IACF,CAAC,CAAC,OAAOuB,CAAC,EAAE;MACVtB,QAAQ,CAAC,6DAA6D,CAAC;IACzE;EACF,CAAC;EAED,MAAMuB,UAAU,GAAGA,CAAC;IAAEC,SAAS;IAAEC;EAAiB,CAAC,kBACjDvC,OAAA;IACEwC,KAAK,EAAE;MACLC,eAAe,EAAE,SAAS;MAC1BC,OAAO,EAAE,MAAM;MACfC,MAAM,EAAE,SAAS;MACjBC,SAAS,EAAE,QAAQ;MACnBC,YAAY,EAAEP,SAAS,GAAG,gBAAgB,GAAG;IAC/C,CAAE;IACFQ,OAAO,EAAEP,gBAAiB;IAAAQ,QAAA,EAEzBT,SAAS,GAAG,iBAAiB,GAAG;EAAiB;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CACN;EAEDtD,SAAS,CAAC,MAAM;IACd,IAAIc,SAAS,IAAIN,QAAQ,EAAE;MACzB,IAAI;QACF,MAAM+C,cAAc,GAAG,IAAItD,cAAc,CAAC,iBAAiB,EAAE;UAC3DuD,SAAS,EAAE,KAAK;UAChBC,QAAQ,EAAE,IAAI;UACdC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG;QACxB,CAAC,CAAC;QAEF,MAAMC,OAAO,GAAG;UACd7C,SAAS,EAAEA,SAAS;UACpBN,QAAQ,EAAEA;QACZ,CAAC;QAED+C,cAAc,CAACK,MAAM,CAACD,OAAO,CAAC7C,SAAS,EAAE6C,OAAO,CAAC;MACnD,CAAC,CAAC,OAAO3C,KAAK,EAAE;QACd6C,OAAO,CAAC7C,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D;IACF;EACF,CAAC,EAAE,CAACF,SAAS,EAAEN,QAAQ,CAAC,CAAC;EAEzB,MAAM4B,aAAa,GAAI1B,OAAO,IAAK;IACjC,MAAMoD,IAAI,GAAGpD,OAAO,CAACc,MAAM;IAC3B,MAAMuC,IAAI,GAAGrD,OAAO,CAAC,CAAC,CAAC,CAACc,MAAM;IAC9B,OAAOd,OAAO,CAACsD,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,KACxBD,GAAG,CAACD,GAAG,CAAC,CAACG,IAAI,EAAEC,CAAC,MAAM;MACpBC,KAAK,EAAEF,IAAI;MACXxB,KAAK,EAAE;QACL2B,OAAO,EAAEJ,CAAC,IAAIJ,IAAI,GAAG,CAAC,IAAIM,CAAC,IAAIL,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;QACjDnB,eAAe,EAAEsB,CAAC,IAAIJ,IAAI,GAAG,CAAC,IAAIM,CAAC,IAAIL,IAAI,GAAG,CAAC,GAAG,WAAW,GAAG;MAClE;IACF,CAAC,CAAC,CACJ,CAAC;EACH,CAAC;EAED,oBACE5D,OAAA;IAAKwC,KAAK,EAAE4B,MAAM,CAACC,SAAU;IAAAtB,QAAA,GAC1BlC,KAAK,iBAAIb,OAAA;MAAKwC,KAAK,EAAE4B,MAAM,CAACE,QAAS;MAAAvB,QAAA,EAAElC;IAAK;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACpDnD,OAAA;MAAA+C,QAAA,EAAI;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzCnD,OAAA;MAAMuE,QAAQ,EAAEtD,YAAa;MAACuB,KAAK,EAAE4B,MAAM,CAACI,IAAK;MAAAzB,QAAA,gBAC/C/C,OAAA;QACEyE,IAAI,EAAC,MAAM;QACXP,KAAK,EAAE7D,QAAS;QAChBqE,QAAQ,EAAGtC,CAAC,IAAK9B,WAAW,CAAC8B,CAAC,CAACuC,MAAM,CAACT,KAAK,CAAE;QAC7CU,WAAW,EAAC,sCAAiC;QAC7CC,QAAQ;QACRrC,KAAK,EAAE4B,MAAM,CAACU;MAAM;QAAA9B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACFnD,OAAA;QAAQyE,IAAI,EAAC,QAAQ;QAACjC,KAAK,EAAE4B,MAAM,CAACW,MAAO;QAAAhC,QAAA,EAAC;MAE5C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACPnD,OAAA;MAAKwC,KAAK,EAAE4B,MAAM,CAACY,MAAO;MAAAjC,QAAA,GACvBxC,OAAO,CAACc,MAAM,GAAG,CAAC,iBACzBrB,OAAA;QAAA+C,QAAA,gBACE/C,OAAA,CAACqC,UAAU;UACTC,SAAS,EAAEvB,gBAAiB;UAC5BwB,gBAAgB,EAAEA,CAAA,KAAMvB,mBAAmB,CAAC,CAACD,gBAAgB;QAAE;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC,eACFnD,OAAA;UAAKwC,KAAK,EAAE;YACd,GAAG4B,MAAM,CAACa,gBAAgB;YAC1B,IAAIlE,gBAAgB,GAAG,CAAC,CAAC,GAAGqD,MAAM,CAACc,aAAa;UAClD,CAAE;UAAAnC,QAAA,EACGhC,gBAAgB,iBACff,OAAA,CAAAE,SAAA;YAAA6C,QAAA,gBACE/C,OAAA;cAAA+C,QAAA,GAAI,6BAA2B,EAAC1C,QAAQ;YAAA;cAAA2C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC9CnD,OAAA;cAAOwC,KAAK,EAAE4B,MAAM,CAACe,KAAM;cAAApC,QAAA,eACzB/C,OAAA;gBAAA+C,QAAA,EACGxC,OAAO,CAACsD,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBAClB/D,OAAA;kBAAA+C,QAAA,EACGe,GAAG,CAACD,GAAG,CAAC,CAACG,IAAI,EAAEC,CAAC,kBACfjE,OAAA;oBAEEwC,KAAK,EAAE;sBACL,GAAG4B,MAAM,CAACJ,IAAI;sBACd,GAAGA,IAAI,CAACxB,KAAK;sBACb,IAAI/B,YAAY,CAAC2E,IAAI,CAAC,CAAC,CAACC,CAAC,EAAEC,CAAC,CAAC,KAAKD,CAAC,KAAKtB,CAAC,IAAIuB,CAAC,KAAKrB,CAAC,CAAC,GACjDG,MAAM,CAACmB,SAAS,GAChB,CAAC,CAAC;oBACR,CAAE;oBAAAxC,QAAA,EAEDiB,IAAI,CAACE;kBAAK,GATN,GAAGH,CAAC,IAAIE,CAAC,EAAE;oBAAAjB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAUd,CACL;gBAAC,GAdKY,CAAC;kBAAAf,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAeN,CACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA,eACR;QACH;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EACQxC,SAAS,iBACRX,OAAA;QAAA+C,QAAA,gBACE/C,OAAA;UAAA+C,QAAA,EAAI;QAA8B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvCnD,OAAA;UAAOwC,KAAK,EAAE4B,MAAM,CAACoB,cAAe;UAAAzC,QAAA,eACpC/C,OAAA;YAAA+C,QAAA,gBACI/C,OAAA;cAAA+C,QAAA,EACC1C,QAAQ,CAACoF,KAAK,CAAC,EAAE,CAAC,CAAC5B,GAAG,CAAC,CAAC6B,IAAI,EAAEC,KAAK,kBAChC3F,OAAA;gBAAyBwC,KAAK,EAAE4B,MAAM,CAACwB,aAAc;gBAAA7C,QAAA,EAAE2C;cAAI,GAAlD,OAAOC,KAAK,EAAE;gBAAA3C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAyC,CACnE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACLnD,OAAA;cAAA+C,QAAA,EACCpC,SAAS,CAAC8E,KAAK,CAAC,EAAE,CAAC,CAAC5B,GAAG,CAAC,CAAC6B,IAAI,EAAEC,KAAK,kBACjC3F,OAAA;gBAA4BwC,KAAK,EAAE4B,MAAM,CAACwB,aAAc;gBAAA7C,QAAA,eACxD/C,OAAA;kBAAMwC,KAAK,EAAE;oBAAEqD,UAAU,EAAE,MAAM;oBAAEC,QAAQ,EAAE;kBAAO,CAAE;kBAAA/C,QAAA,EAAE2C;gBAAI;kBAAA1C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cAAC,GAD3D,UAAUwC,KAAK,EAAE;gBAAA3C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAGtB,CACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACRnD,OAAA;UAAA+C,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBnD,OAAA;UAAK+F,EAAE,EAAC,gBAAgB;UAACvD,KAAK,EAAE4B,MAAM,CAAChB;QAAe;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC/C,EAAA,CAlLQD,WAAW;AAAA6F,EAAA,GAAX7F,WAAW;AAoLpB,MAAMiE,MAAM,GAAG;EACbC,SAAS,EAAE;IACT4B,UAAU,EAAE,mBAAmB;IAC/BC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,SAAS,EAAE,OAAO;IAClBC,UAAU,EAAE,MAAM;IAClB7D,OAAO,EAAE;EACX,CAAC;EACD8B,IAAI,EAAE;IACJ5B,SAAS,EAAE,QAAQ;IACnB4D,YAAY,EAAE;EAChB,CAAC;EACD1B,KAAK,EAAE;IACL2B,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,MAAM;IACdZ,QAAQ,EAAE,MAAM;IAChBpD,OAAO,EAAE,KAAK;IACdiE,MAAM,EAAE,QAAQ;IAChBC,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE;EAChB,CAAC;EACD9B,MAAM,EAAE;IACNe,QAAQ,EAAE,MAAM;IAChBpD,OAAO,EAAE,WAAW;IACpBiE,MAAM,EAAE,MAAM;IACdlE,eAAe,EAAE,SAAS;IAC1BqE,KAAK,EAAE,OAAO;IACdF,MAAM,EAAE,MAAM;IACdC,YAAY,EAAE,KAAK;IACnBlE,MAAM,EAAE;EACV,CAAC;EACDoE,WAAW,EAAE;IACXtE,eAAe,EAAE;EACnB,CAAC;EACDuC,MAAM,EAAE;IACNgC,SAAS,EAAE,MAAM;IACjB;IACAC,SAAS,EAAE,MAAM;IACjBrE,SAAS,EAAE;EACb,CAAC;EACDuC,KAAK,EAAE;IACL+B,cAAc,EAAE,UAAU;IAC1BP,MAAM,EAAE,WAAW;IACnBQ,QAAQ,EAAE;EACZ,CAAC;EACDnD,IAAI,EAAE;IACJ4C,MAAM,EAAE,iBAAiB;IACzBlE,OAAO,EAAE,MAAM;IACfE,SAAS,EAAE,QAAQ;IACnB6D,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdZ,QAAQ,EAAE;EACZ,CAAC;EACDP,SAAS,EAAE;IACT9C,eAAe,EAAE;EACnB,CAAC;EACD6B,QAAQ,EAAE;IACV7B,eAAe,EAAE,SAAS;IAC1BqE,KAAK,EAAE,SAAS;IAChBpE,OAAO,EAAE,MAAM;IACfiE,MAAM,EAAE,WAAW;IACnBF,KAAK,EAAE,KAAK;IACZ7D,SAAS,EAAE,QAAQ;IACnBiD,UAAU,EAAE,MAAM;IAClBuB,QAAQ,EAAE,OAAO;IACjBC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,KAAK;IACXC,SAAS,EAAE,kBAAkB;IAC7BC,MAAM,EAAE,IAAI;IACZX,YAAY,EAAE;EAChB,CAAC;EAEDrB,cAAc,EAAE;IACd0B,cAAc,EAAE,UAAU;IAC1BP,MAAM,EAAE,WAAW;IACnBQ,QAAQ,EAAE;EACZ,CAAC;EACDvB,aAAa,EAAE;IACbgB,MAAM,EAAE,iBAAiB;IACzBlE,OAAO,EAAE,MAAM;IACfE,SAAS,EAAE,QAAQ;IACnB6D,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdZ,QAAQ,EAAE;EACZ,CAAC;EACD1C,cAAc,EAAE;IACdqD,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,OAAO;IACfE,MAAM,EAAE,iBAAiB;IACzBI,SAAS,EAAE,MAAM;IACjBL,MAAM,EAAE;EACV,CAAC;EACD1B,gBAAgB,EAAE;IAChBwC,SAAS,EAAE,QAAQ;IACnBC,QAAQ,EAAE,QAAQ;IAClBC,UAAU,EAAE;EACd,CAAC;EACDzC,aAAa,EAAE;IACbuC,SAAS,EAAE;EACb;AACA,CAAC;AAED,eAAetH,WAAW;AAAC,IAAA6F,EAAA;AAAA4B,YAAA,CAAA5B,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}