{"ast":null,"code":"var _jsxFileName = \"/Users/Jainfamily/Desktop/cs466/v2/CS466_Nussinov_Algorithm/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { FornaContainer } from \"fornac\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NussinovApp() {\n  _s();\n  const [sequence, setSequence] = useState(\"\");\n  const [dpTable, setDpTable] = useState([]);\n  const [visitedCells, setVisitedCells] = useState([]);\n  const [structure, setStructure] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isDpTableVisible, setIsDpTableVisible] = useState(true);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const validCharacters = /^[AUCG]*$/i;\n    if (sequence.length > 30) {\n      setError(\"Please enter a valid RNA sequence (â‰¤ 30 characters).\");\n      return;\n    }\n    if (!validCharacters.test(sequence)) {\n      setError(\"Invalid sequence! Please use only A, U, C, and G.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:4000/nussinov\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sequence\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setDpTable(modifyDpTable(data.dp_table));\n        setVisitedCells(data.visited_cells);\n        setStructure(data.structure);\n        setError(\"\");\n      } else {\n        setError(data.error);\n      }\n    } catch (e) {\n      setError(\"An unexpected error occurred while processing your request.\");\n    }\n  };\n  const FoldingBar = ({\n    isVisible,\n    toggleVisibility\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#f0f0f0',\n      padding: '12px 20px',\n      cursor: 'pointer',\n      textAlign: 'center',\n      borderRadius: '8px 8px 0 0',\n      boxShadow: '0 -2px 5px rgba(0,0,0,0.1)',\n      transition: 'all 0.3s ease',\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      fontWeight: 'bold',\n      color: '#333'\n    },\n    onClick: toggleVisibility,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: isVisible ? 'Hide DP Table' : 'Show DP Table'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        transform: isVisible ? 'rotate(180deg)' : 'rotate(0deg)',\n        transition: 'transform 0.3s ease',\n        fontSize: '20px'\n      },\n      children: \"\\u25BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    if (structure && sequence) {\n      try {\n        const fornaContainer = new FornaContainer(\"#fornaContainer\", {\n          animation: false,\n          zoomable: true,\n          initialSize: [600, 300]\n        });\n        const options = {\n          structure: structure,\n          sequence: sequence\n        };\n        fornaContainer.addRNA(options.structure, options);\n      } catch (error) {\n        console.error(\"Error initializing FornaContainer:\", error);\n      }\n    }\n  }, [structure, sequence]);\n  const modifyDpTable = dpTable => {\n    const rows = dpTable.length;\n    const cols = dpTable[0].length;\n    return dpTable.map((row, i) => row.map((cell, j) => ({\n      value: cell,\n      style: {\n        opacity: i >= j ? 0.5 : 1,\n        backgroundColor: i >= j ? 'lightgray' : 'white'\n      }\n    })));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.errorBar,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Nussinov Algorithm Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sequence,\n        onChange: e => setSequence(e.target.value),\n        placeholder: \"Enter RNA Sequence (\\u2264 30 chars)\",\n        required: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        children: \"Run Algorithm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.output,\n      children: [dpTable.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FoldingBar, {\n          isVisible: isDpTableVisible,\n          toggleVisibility: () => setIsDpTableVisible(!isDpTableVisible)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            ...styles.dpTableContainer,\n            ...(isDpTableVisible ? {} : styles.dpTableHidden)\n          },\n          children: isDpTableVisible && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"DP Table for RNA Sequence: \", sequence]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              style: styles.table,\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: dpTable.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      ...styles.cell,\n                      ...cell.style,\n                      ...(i === 0 && j === dpTable[0].length - 1 ? {\n                        backgroundColor: 'lightgreen'\n                      } : visitedCells.some(([x, y]) => x === i && y === j) ? styles.highlight : {})\n                    },\n                    children: cell.value\n                  }, `${i}-${j}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 21\n                  }, this))\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 15\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 3\n      }, this), structure && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Predicted Secondary Structure:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          style: styles.structureTable,\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: sequence.split('').map((char, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: styles.structureCell,\n                children: char\n              }, `seq-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: structure.split('').map((char, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: styles.structureCell,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: 'bold',\n                    fontSize: '18px'\n                  },\n                  children: char\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this)\n              }, `struct-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Visualization:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"fornaContainer\",\n          style: styles.fornaContainer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(NussinovApp, \"gaUetSQEzlUSSjbGX+nUhv8Rsss=\");\n_c = NussinovApp;\nconst styles = {\n  container: {\n    fontFamily: \"Arial, sans-serif\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minHeight: \"100vh\",\n    paddingTop: \"10px\",\n    padding: \"20px\"\n  },\n  form: {\n    textAlign: \"center\",\n    marginBottom: \"20px\"\n  },\n  input: {\n    width: \"300px\",\n    height: \"40px\",\n    fontSize: \"16px\",\n    padding: \"5px\",\n    margin: \"10px 0\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"5px\"\n  },\n  button: {\n    fontSize: \"16px\",\n    padding: \"16px 20px\",\n    margin: \"10px\",\n    backgroundColor: \"#007bff\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\"\n  },\n  buttonHover: {\n    backgroundColor: \"#0056b3\"\n  },\n  output: {\n    marginTop: \"20px\",\n    // maxHeight: \"60vh\",\n    overflowY: \"auto\",\n    textAlign: \"center\"\n  },\n  table: {\n    borderCollapse: \"collapse\",\n    margin: \"20px auto\",\n    maxWidth: \"100%\"\n  },\n  cell: {\n    border: \"1px solid black\",\n    padding: \"10px\",\n    textAlign: \"center\",\n    width: \"40px\",\n    height: \"40px\",\n    fontSize: \"12px\"\n  },\n  highlight: {\n    backgroundColor: \"yellow\"\n  },\n  errorBar: {\n    backgroundColor: \"#ffcccc\",\n    color: \"#cc0000\",\n    padding: \"10px\",\n    margin: \"20px auto\",\n    width: \"50%\",\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n    position: \"fixed\",\n    top: 0,\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    zIndex: 1000,\n    borderRadius: '10px'\n  },\n  structureTable: {\n    borderCollapse: \"collapse\",\n    margin: \"20px auto\",\n    maxWidth: \"100%\"\n  },\n  structureCell: {\n    border: \"1px solid black\",\n    padding: \"10px\",\n    textAlign: \"center\",\n    width: \"30px\",\n    height: \"30px\",\n    fontSize: \"14px\"\n  },\n  fornaContainer: {\n    width: \"80%\",\n    height: \"400px\",\n    border: \"1px solid black\",\n    marginTop: \"20px\",\n    margin: \"20px auto\"\n  },\n  dpTableContainer: {\n    maxHeight: '1000px',\n    overflow: 'hidden',\n    transition: 'max-height 0.3s ease-out'\n  },\n  dpTableHidden: {\n    maxHeight: '0'\n  }\n};\nexport default NussinovApp;\nvar _c;\n$RefreshReg$(_c, \"NussinovApp\");","map":{"version":3,"names":["React","useState","useEffect","FornaContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","NussinovApp","_s","sequence","setSequence","dpTable","setDpTable","visitedCells","setVisitedCells","structure","setStructure","error","setError","isDpTableVisible","setIsDpTableVisible","handleSubmit","event","preventDefault","validCharacters","length","test","response","fetch","method","headers","body","JSON","stringify","data","json","ok","modifyDpTable","dp_table","visited_cells","e","FoldingBar","isVisible","toggleVisibility","style","backgroundColor","padding","cursor","textAlign","borderRadius","boxShadow","transition","display","justifyContent","alignItems","fontWeight","color","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","transform","fontSize","fornaContainer","animation","zoomable","initialSize","options","addRNA","console","rows","cols","map","row","i","cell","j","value","opacity","styles","container","errorBar","onSubmit","form","type","onChange","target","placeholder","required","input","button","output","dpTableContainer","dpTableHidden","table","some","x","y","highlight","structureTable","split","char","index","structureCell","id","_c","fontFamily","flexDirection","minHeight","paddingTop","marginBottom","width","height","margin","border","buttonHover","marginTop","overflowY","borderCollapse","maxWidth","position","top","left","zIndex","maxHeight","overflow","$RefreshReg$"],"sources":["/Users/Jainfamily/Desktop/cs466/v2/CS466_Nussinov_Algorithm/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FornaContainer } from \"fornac\";\n\nfunction NussinovApp() {\n  const [sequence, setSequence] = useState(\"\");\n  const [dpTable, setDpTable] = useState([]);\n  const [visitedCells, setVisitedCells] = useState([]);\n  const [structure, setStructure] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isDpTableVisible, setIsDpTableVisible] = useState(true);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const validCharacters = /^[AUCG]*$/i;\n\n    if (sequence.length > 30) {\n      setError(\"Please enter a valid RNA sequence (â‰¤ 30 characters).\");\n      return;\n    }\n    if (!validCharacters.test(sequence)) {\n      setError(\"Invalid sequence! Please use only A, U, C, and G.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:4000/nussinov\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ sequence }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setDpTable(modifyDpTable(data.dp_table));\n        setVisitedCells(data.visited_cells);\n        setStructure(data.structure);\n        setError(\"\");\n      } else {\n        setError(data.error);\n      }\n    } catch (e) {\n      setError(\"An unexpected error occurred while processing your request.\");\n    }\n  };\n\n  const FoldingBar = ({ isVisible, toggleVisibility }) => (\n    <div\n      style={{\n        backgroundColor: '#f0f0f0',\n        padding: '12px 20px',\n        cursor: 'pointer',\n        textAlign: 'center',\n        borderRadius: '8px 8px 0 0',\n        boxShadow: '0 -2px 5px rgba(0,0,0,0.1)',\n        transition: 'all 0.3s ease',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        fontWeight: 'bold',\n        color: '#333',\n      }}\n      onClick={toggleVisibility}\n    >\n      <span>{isVisible ? 'Hide DP Table' : 'Show DP Table'}</span>\n      <span style={{\n        transform: isVisible ? 'rotate(180deg)' : 'rotate(0deg)',\n        transition: 'transform 0.3s ease',\n        fontSize: '20px',\n      }}>\n        â–¼\n      </span>\n    </div>\n  );\n\n  useEffect(() => {\n    if (structure && sequence) {\n      try {\n        const fornaContainer = new FornaContainer(\"#fornaContainer\", {\n          animation: false,\n          zoomable: true,\n          initialSize: [600, 300],\n        });\n\n        const options = {\n          structure: structure,\n          sequence: sequence,\n        };\n\n        fornaContainer.addRNA(options.structure, options);\n      } catch (error) {\n        console.error(\"Error initializing FornaContainer:\", error);\n      }\n    }\n  }, [structure, sequence]);\n\n  const modifyDpTable = (dpTable) => {\n    const rows = dpTable.length;\n    const cols = dpTable[0].length;\n    return dpTable.map((row, i) =>\n      row.map((cell, j) => ({\n        value: cell,\n        style: {\n          opacity: i >= j ? 0.5 : 1,\n          backgroundColor: i >= j ? 'lightgray' : 'white',\n        },\n      }))\n    );\n  };\n\n  return (\n    <div style={styles.container}>\n      {error && <div style={styles.errorBar}>{error}</div>}\n      <h1>Nussinov Algorithm Visualization</h1>\n      <form onSubmit={handleSubmit} style={styles.form}>\n        <input\n          type=\"text\"\n          value={sequence}\n          onChange={(e) => setSequence(e.target.value)}\n          placeholder=\"Enter RNA Sequence (â‰¤ 30 chars)\"\n          required\n          style={styles.input}\n        />\n        <button type=\"submit\" style={styles.button}>\n          Run Algorithm\n        </button>\n      </form>\n      <div style={styles.output}>\n        {dpTable.length > 0 && (\n  <div>\n    <FoldingBar\n      isVisible={isDpTableVisible}\n      toggleVisibility={() => setIsDpTableVisible(!isDpTableVisible)}\n    />\n    <div style={{\n  ...styles.dpTableContainer,\n  ...(isDpTableVisible ? {} : styles.dpTableHidden)\n}}>\n    {isDpTableVisible && (\n      <>\n        <h3>DP Table for RNA Sequence: {sequence}</h3>\n        <table style={styles.table}>\n          <tbody>\n            {dpTable.map((row, i) => (\n              <tr key={i}>\n                {row.map((cell, j) => (\n                    <td\n                    key={`${i}-${j}`}\n                    style={{\n                        ...styles.cell,\n                        ...cell.style,\n                        ...(i === 0 && j === dpTable[0].length - 1\n                        ? { backgroundColor: 'lightgreen' }\n                        : visitedCells.some(([x, y]) => x === i && y === j)\n                        ? styles.highlight\n                        : {}),\n                    }}\n                    >\n                    {cell.value}\n                    </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </>\n    )}\n    </div>\n  </div>\n)}\n        {structure && (\n          <div>\n            <h3>Predicted Secondary Structure:</h3>\n            <table style={styles.structureTable}>\n            <tbody>\n                <tr>\n                {sequence.split('').map((char, index) => (\n                    <td key={`seq-${index}`} style={styles.structureCell}>{char}</td>\n                ))}\n                </tr>\n                <tr>\n                {structure.split('').map((char, index) => (\n                    <td key={`struct-${index}`} style={styles.structureCell}>\n                    <span style={{ fontWeight: 'bold', fontSize: '18px' }}>{char}</span>\n\n                    </td>\n                ))}\n                </tr>\n            </tbody>\n            </table>\n            <h3>Visualization:</h3>\n            <div id=\"fornaContainer\" style={styles.fornaContainer}></div> {/* Forna Container */}\n          </div>\n        )}\n        \n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    fontFamily: \"Arial, sans-serif\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minHeight: \"100vh\",\n    paddingTop: \"10px\",\n    padding: \"20px\",\n  },\n  form: {\n    textAlign: \"center\",\n    marginBottom: \"20px\",\n  },\n  input: {\n    width: \"300px\",\n    height: \"40px\",\n    fontSize: \"16px\",\n    padding: \"5px\",\n    margin: \"10px 0\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"5px\",\n  },\n  button: {\n    fontSize: \"16px\",\n    padding: \"16px 20px\",\n    margin: \"10px\",\n    backgroundColor: \"#007bff\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n  },\n  buttonHover: {\n    backgroundColor: \"#0056b3\",\n  },\n  output: {\n    marginTop: \"20px\",\n    // maxHeight: \"60vh\",\n    overflowY: \"auto\",\n    textAlign: \"center\",\n  },\n  table: {\n    borderCollapse: \"collapse\",\n    margin: \"20px auto\",\n    maxWidth: \"100%\",\n  },\n  cell: {\n    border: \"1px solid black\",\n    padding: \"10px\",\n    textAlign: \"center\",\n    width: \"40px\",\n    height: \"40px\",\n    fontSize: \"12px\",\n  },\n  highlight: {\n    backgroundColor: \"yellow\",\n  },\n  errorBar: {\n  backgroundColor: \"#ffcccc\",\n  color: \"#cc0000\",\n  padding: \"10px\",\n  margin: \"20px auto\",\n  width: \"50%\",\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n  position: \"fixed\",\n  top: 0,\n  left: \"50%\",\n  transform: \"translateX(-50%)\",\n  zIndex: 1000,\n  borderRadius: '10px',\n},\n\nstructureTable: {\n  borderCollapse: \"collapse\",\n  margin: \"20px auto\",\n  maxWidth: \"100%\",\n},\nstructureCell: {\n  border: \"1px solid black\",\n  padding: \"10px\",\n  textAlign: \"center\",\n  width: \"30px\",\n  height: \"30px\",\n  fontSize: \"14px\",\n},\nfornaContainer: {\n  width: \"80%\",\n  height: \"400px\",\n  border: \"1px solid black\",\n  marginTop: \"20px\",\n  margin: \"20px auto\",\n},\ndpTableContainer: {\n  maxHeight: '1000px',\n  overflow: 'hidden',\n  transition: 'max-height 0.3s ease-out',\n},\ndpTableHidden: {\n  maxHeight: '0',\n},\n};\n\nexport default NussinovApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}